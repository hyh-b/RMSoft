<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.rmsoft.mapper.ChatMapper">
    <!-- 채팅 입력-->
    <insert id="insertChatMessage" parameterType="com.example.rmsoft.dto.ChatMessageDto">
        insert into chat_message (member_id, chat_code, message, write_time, is_read)
        values (#{memberId}, #{chatCode}, #{message}, #{writeTime}, #{isRead})
    </insert>
    <!-- 채팅 코드 반환-->
    <select id="findChatCode" resultType="int" parameterType="String">
        select chat_code from chat_room where member_id = #{memberId}
    </select>
    <!-- 채팅 메세지 반환-->
    <select id="findChatMessage" resultType="com.example.rmsoft.dto.ChatMessageDto">
        select * from chah_message where chat_code = #{chatCode}
    </select>

    <!-- 채팅 읽음 -->
    <update id="updateMessageReadStatus" parameterType="String">
        UPDATE chat_message SET is_read = 'Y' WHERE member_id &lt;&gt; #{memberId} and is_read = 'N'
    </update>

    <!-- 채팅방 생성-->
    <insert id="createChatRoom" parameterType="com.example.rmsoft.dto.ChatRoomDto" useGeneratedKeys="true" keyProperty="chatCode">
        insert into chat_room (member_id) values (#{memberId})
    </insert>

    <!-- 채팅방 생성 여부 -->
    <select id="checkChatRoom" parameterType="String" resultType="Boolean">
        select exists(select 1 from chat_room where member_id = #{memberId})
    </select>

    <!-- 채팅 기록 가져오기 -->
    <select id="getChatMessage" parameterType="int" resultType="com.example.rmsoft.dto.ChatMessageDto">
        select member_id, chat_code, message, write_time, is_read
        from chat_message
        where chat_code = #{chatCode}
        order by write_time asc
    </select>

    <!-- 채팅 목록 -->
    <select id="getChatList" resultType="com.example.rmsoft.dto.ChatMessageDto">
        SELECT cr.member_id, cm.chat_code, cm.message, cm.write_time, cm.is_read
        FROM
        chat_message cm
        JOIN (
        SELECT chat_code, MAX(write_time) AS latest_time
        FROM
        chat_message
        GROUP BY
        chat_code
        ) AS latest_messages
        ON cm.chat_code = latest_messages.chat_code AND cm.write_time = latest_messages.latest_time
        JOIN
        chat_room cr ON cm.chat_code = cr.chat_code
        WHERE
        cr.member_id &lt;&gt; #{memeberId}
        ORDER BY
        cm.write_time DESC;

    </select>

</mapper>